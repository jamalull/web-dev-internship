
1. Buatlah database mahasiswa "db_mahasiswa" 
2. Buatlah tabel mahasiswa dengan isi field sebagai berikut: - nim (primary key) - nama - jenis_kelamin - ttl - alamat 

INSERT VALUE TO TABLE mahasiswa :
INSERT INTO `mahasiswa`(`nim`, `nama`, `jenis_kelamin`, `ttl`, `alamat`) VALUES (181051100, "Edo Febriansyah","Pria","Bekasi, 18 January 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550"),
(181051101, "Edo Febriansyah","Pria","Bekasi, 18 January 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550"),
(181051102, "Adi Afthailah","Pria","Bogor, 19 Maret 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550"),
(181051103, "Rama Fadill","Pria","Depok, 20 Desember 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550"),
(181051104, "Denny Rachmat","Pria","Bekasi, 21 April 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550"),
(181051105, "Alex Jovuska","Pria","Solo, 22 January 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550"),
(181051106, "Andin Salsabila","Wanita","Jakarta, 23 Desember 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550"),
(181051107, "Aurorra Eskova","Wanita","Jakarta, 24 Maret 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550"),
(181051108, "Miranti Syauma","Wanita","Bekasi, 25 Desember 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550"),
(181051109, "Hanan Nabila","Wanita","Tangerang, 26 April 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550"),
(181051110, "Sisca Pricilla","Wanita","Bekasi, 27 Maret 2000","Jl.Bekasi Raya Gg.Makmur RT 4 RW 5, Bekasi Timur, 14550");

3. Buatlah tabel mata kuliah dengan isi field sebagai berikut: - kode_mk (primary key) - nama_mk - sks - semester 

INSERT VALUE TO TABLE mata_kuliah :
INSERT INTO `mata_kuliah`(`kode_mk`, `nama_mk`, `sks`, `semester`) VALUES 
(1000, "Basis Data", 4, 1),
(1001, "Struktur Data", 3, 3),
(1002, "Pendidikan Agama", 4, 4),
(1003, "Pemrograman Web", 4, 5),
(1004, "Analisis Algoritma", 4, 3),
(1005, "OOP", 4, 5),
(1006, "Algoritma", 3, 4),
(1007, "Dasar Pemrograman", 4, 2),
(1008, "Skripsi", 6, 8),
(1009, "Proposal Penelitian", 6, 7),
(1010, "Basis Data", 4, 1);

4. Buatlah tabel nilai dengan isi field sebagai berikut: - nim - kode_mk - uts - uas - nilai_akhir - grade 
5. Tambahkan minimal 10 data mahasiswa dan minimal 10 data mata kuliah. 
6. Tambahkan minimal 20 nilai uts, nilai uas dan nilai akhir (kecuali grade) mahasiswa ke tabel nilai dengan bebrapa mata kuliah. 

INSERT VALUE TO TABLE nilai :
INSERT INTO `nilai`(`nim`, `kode_mk`, `uts`, `uas`, `nilai_akhir`, `grade`) VALUES 
(181051100, 1000, 80, 85, 80, "A"),
(181051101, 1001, 70, 88, 78, "B"),
(181051102, 1002, 60, 76, 70, "B"),
(181051103, 1003, 75, 90, 80, "A"),
(181051104, 1004, 73, 90, 80, "A"),
(181051105, 1005, 68, 85, 79, "B"),
(181051106, 1006, 85, 80, 82, "A"),
(181051107, 1007, 79, 78, 83, "A"),
(181051108, 1008, 83, 78, 80, "A"),
(181051109, 1009, 70, 85, 84, "A"),
(181051110, 1010, 70, 87, 85, "A"),
(181051111, 1000, 80, 85, 80, "A"),
(181051112, 1001, 70, 88, 78, "B"),
(181051113, 1002, 60, 76, 70, "B"),
(181051114, 1003, 75, 90, 80, "A"),
(181051115, 1004, 73, 90, 80, "A"),
(181051116, 1005, 68, 85, 79, "B"),
(181051117, 1006, 85, 80, 82, "A"),
(181051118, 1007, 79, 78, 83, "A"),
(181051119, 1008, 83, 78, 80, "A"),
(181051120, 1009, 70, 85, 84, "A"),
(181051121, 1010, 70, 87, 85, "A");


================================================================================================
COMMAND OF SQL QUERY FOR THE TASK :
7. Update Grade di tabel nilai dengan ketentuan: 
- 80 ≤ nilai akhir ≤ 100 grade = A 
- 70 ≤ nilai akhir ≤ 79 grade = B 
- 60 ≤ nilai akhir ≤ 69 grade = C 
- 50 ≤ nilai akhir ≤ 59 grade = D 
- 0 ≤ nilai akhir ≤ 49 E 

Source : https://www.softwaretestinghelp.com/mysql-if-else-statement/ 


DELIMITER //
CREATE FUNCTION CalculateGradeStudents(nilai_akhir INT)
  RETURNS VARCHAR(10)
  BEGIN
    DECLARE Grade VARCHAR(10);
    IF nilai_akhir <= 100 AND nilai_akhir >= 80 THEN SET Grade = 'A';
    ELSEIF nilai_akhir <= 79 AND nilai_akhir >= 70 THEN SET Grade = 'B';
    ELSEIF nilai_akhir <= 69 AND nilai_akhir >= 60 THEN SET Grade = 'C';
    ELSEIF nilai_akhir <= 59 AND nilai_akhir >= 50 THEN SET Grade = 'D';
    ELSE SET Grade = 'E';
    END IF;
    RETURN Grade;
  END
  // 
  DELIMITER ;
  
# If you want only to display the output.
SELECT nim, nilai_akhir, CalculateGradeStudents(nilai_akhir) AS
 Grades FROM nilai ORDER BY Grades;


# If want to update data then you can using these function.
UPDATE nilai SET grade = CalculateGradeStudents(nilai_akhir)


================================================================================================

COMMAND OF SQL QUERY FOR THE TASK :
8. Menampilkan data nim, kode_mk, dan nilai akhir y dengan grade A dan B. 
(SELECT nim, kode_mk, nilai_akhir, grade FROM `nilai` WHERE grade="A" OR grade="B";)

(SELECT mahasiswa.nim, nilai.kode_mk, nilai.nilai_akhir, nilai.grade FROM mahasiswa
INNER JOIN nilai
ON mahasiswa.nim = nilai.nim;)

================================================================================================

9. Menampilkan data nilai maksimal, nilai minimal dan rata-rata dari nilai akhir. 
(SELECT *, MIN(nilai_akhir) as nilai_min, MAX(nilai_akhir) as nilai_maks, AVG(nilai_akhir) as nilai_rataan FROM `nilai`)

================================================================================================

10. Menampilkan jumlah mahasiswa yang mengikuti mata kuliah yang ada pada tabel nilai beserta grade yang didapat. 
(SELECT COUNT(nim) as jml_mhs,grade FROM `nilai` GROUP BY grade)

================================================================================================









